# Default values for yad-backend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: yad2
  image: yad-gateway
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  build: "66"

yad:
  database:
    uri: "mongodb://root:somePassword@mongo.example.com:27017/admin"
    authDb: "yad"
  javaOptions: "-Dlogging.level.com.nbakaev=TRACE"
  youtube:
    pathDownload: "/mnt/nas/%(title)s-%(id)s.%(ext)s"
    apiKey: ""
  cifs:
    enable: true
    params: "username=someUsername,password=somePassword,iocharset=utf8 //nas.example.com/path-location"
    mountPath: "/mnt/nas"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

#securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

# required by cifs
securityContext:
  capabilities:
    add:
      - SYS_ADMIN
      - DAC_READ_SEARCH
  privileged: true

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
